; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -passes=instcombine < %s | FileCheck %s

@Q = internal unnamed_addr global b64 1, align 8

; If a pointer is loaded as an integer, the load returns poison and the bitcast
; to byte has a distinct value from a byte load. Avoid inserting replacing the
; integer load with a byte load + byte phi.
define b64 @test(i1 %c, ptr %p) {
; CHECK-LABEL: @test(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br i1 [[C:%.*]], label [[IF:%.*]], label [[END:%.*]]
; CHECK:       if:
; CHECK-NEXT:    [[LOAD:%.*]] = load i64, ptr @Q, align 8
; CHECK-NEXT:    br label [[END]]
; CHECK:       end:
; CHECK-NEXT:    [[PHI:%.*]] = phi i64 [ 0, [[ENTRY:%.*]] ], [ [[LOAD]], [[IF]] ]
; CHECK-NEXT:    store i64 [[PHI]], ptr [[P:%.*]], align 8
; CHECK-NEXT:    [[CAST:%.*]] = bitcast i64 [[PHI]] to b64
; CHECK-NEXT:    ret b64 [[CAST]]
;
entry:
  br i1 %c, label %if, label %end

if:
  %load = load i64, ptr @Q, align 8
  br label %end

end:
  %phi = phi i64 [ 0, %entry ], [ %load, %if ]
  store i64 %phi, ptr %p, align 8
  %cast = bitcast i64 %phi to b64
  ret b64 %cast
}
